apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-besteffort-0
  name: openshift-worker-vcpu-cloudscale-besteffort-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-besteffort-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-gua-93468ed8b2029fe
  name: openshift-worker-vcpu-cloudscale-gua-93468ed8b2029fe
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-guaranteedavailability-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-guaranteedavailability
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-besteffort-2
  name: openshift-worker-vcpu-exoscale-besteffort-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-besteffort-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-guara-c7fabf75f900683
  name: openshift-worker-vcpu-exoscale-guara-c7fabf75f900683
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-guaranteedavailability-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-guaranteedavailability
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-besteffort-4
  name: openshift-worker-vcpu-vsphere-besteffort-4
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-besteffort-4
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-guaran-2b28379ea85e0d3
  name: openshift-worker-vcpu-vsphere-guaran-2b28379ea85e0d3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-guaranteedavailability-5
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-guaranteedavailability
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-besteffort-6
  name: openshift-worker-vcpu-openstack-besteffort-6
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-besteffort-6
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-guar-437fd9b37153898
  name: openshift-worker-vcpu-openstack-guar-437fd9b37153898
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-guaranteedavailability-7
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-guaranteedavailability
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-besteffort-8
  name: openshift-worker-vcpu-cloudscale-besteffort-8
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-besteffort-8
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-gua-9c5f21dd467a005
  name: openshift-worker-vcpu-cloudscale-gua-9c5f21dd467a005
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-guaranteedavailability-9
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-guaranteedavailability
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-zero-10
  name: openshift-worker-vcpu-cloudscale-zero-10
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-zero-10
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-zero
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-standard-11
  name: openshift-worker-vcpu-cloudscale-standard-11
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-standard-11
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-standard
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-professional-12
  name: openshift-worker-vcpu-cloudscale-professional-12
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-professional-12
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-professional
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-premium-13
  name: openshift-worker-vcpu-cloudscale-premium-13
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-premium-13
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-premium
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-zero-14
  name: openshift-worker-vcpu-exoscale-zero-14
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-zero-14
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-zero
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-standard-15
  name: openshift-worker-vcpu-exoscale-standard-15
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-standard-15
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-standard
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-professional-16
  name: openshift-worker-vcpu-exoscale-professional-16
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-professional-16
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-professional
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-exoscale-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-exoscale-premium-17
  name: openshift-worker-vcpu-exoscale-premium-17
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-exoscale-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-exoscale-premium-17
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-exoscale-premium
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-zero-18
  name: openshift-worker-vcpu-vsphere-zero-18
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-zero-18
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-zero
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-standard-19
  name: openshift-worker-vcpu-vsphere-standard-19
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-standard-19
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-standard
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-professional-20
  name: openshift-worker-vcpu-vsphere-professional-20
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-professional-20
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-professional
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-premium-21
  name: openshift-worker-vcpu-vsphere-premium-21
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-premium-21
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-premium
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-zero-22
  name: openshift-worker-vcpu-openstack-zero-22
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-zero-22
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-zero
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-standard-23
  name: openshift-worker-vcpu-openstack-standard-23
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-standard-23
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-standard
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-professional-24
  name: openshift-worker-vcpu-openstack-professional-24
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-professional-24
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-professional
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-openstack-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-openstack-premium-25
  name: openshift-worker-vcpu-openstack-premium-25
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-openstack-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-openstack-premium-25
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-openstack-premium
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-standard-26
  name: openshift-worker-vcpu-vsphere-standard-26
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-standard-26
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-standard
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-vsphere-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-vsphere-professional-27
  name: openshift-worker-vcpu-vsphere-professional-27
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-vsphere-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-vsphere-professional-27
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-vsphere-professional
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-worker-vcpu-cloudscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-worker-vcpu-cloudscale-besteffort-28
  name: openshift-worker-vcpu-cloudscale-besteffort-28
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-worker-vcpu-cloudscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-worker-vcpu-cloudscale-besteffort-28
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-worker-vcpu-cloudscale-besteffort
                - name: AR_QUERY
                  value: query
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_ITEM_DESCRIPTION_JSONNET
                  value: local labels = std.extVar("labels"); "All Compute Resources"
                    % labels
                - name: AR_UNIT_ID
                  value: '300'
                - name: AR_ORG_ID
                  value: foo-org
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-awseks-vcpu-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-awseks-vcpu-besteffort-0
  name: kubernetes-awseks-vcpu-besteffort-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-awseks-vcpu-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-awseks-vcpu-besteffort-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-awseks-vcpu-besteffort
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="aws",
                        distribution="eks",
                        vshn_service_level="best_effort",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-awseks-vcpu-guaranteed
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-awseks-vcpu-guaranteed-1
  name: kubernetes-awseks-vcpu-guaranteed-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-awseks-vcpu-guaranteed
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-awseks-vcpu-guaranteed-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-awseks-vcpu-guaranteed
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="aws",
                        distribution="eks",
                        vshn_service_level="guaranteed_availability",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-exoscalesks-vcpu-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-exoscalesks-vcpu-besteffort-2
  name: kubernetes-exoscalesks-vcpu-besteffort-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-exoscalesks-vcpu-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-exoscalesks-vcpu-besteffort-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-exoscalesks-vcpu-besteffort
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="exoscale",
                        distribution="sks",
                        vshn_service_level="best_effort",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-exoscalesks-vcpu-guaranteed
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-exoscalesks-vcpu-guaranteed-3
  name: kubernetes-exoscalesks-vcpu-guaranteed-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-exoscalesks-vcpu-guaranteed
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-exoscalesks-vcpu-guaranteed-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-exoscalesks-vcpu-guaranteed
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="exoscale",
                        distribution="sks",
                        vshn_service_level="guaranteed_availability",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-googlegke-vcpu-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-googlegke-vcpu-besteffort-4
  name: kubernetes-googlegke-vcpu-besteffort-4
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-googlegke-vcpu-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-googlegke-vcpu-besteffort-4
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-googlegke-vcpu-besteffort
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="gcp",
                        distribution="gke",
                        vshn_service_level="best_effort",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-googlegke-vcpu-guaranteed
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-googlegke-vcpu-guaranteed-5
  name: kubernetes-googlegke-vcpu-guaranteed-5
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-googlegke-vcpu-guaranteed
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-googlegke-vcpu-guaranteed-5
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-googlegke-vcpu-guaranteed
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="gcp",
                        distribution="gke",
                        vshn_service_level="guaranteed_availability",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-azureaks-vcpu-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-azureaks-vcpu-besteffort-6
  name: kubernetes-azureaks-vcpu-besteffort-6
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-azureaks-vcpu-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-azureaks-vcpu-besteffort-6
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-azureaks-vcpu-besteffort
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="azure",
                        distribution="aks",
                        vshn_service_level="best_effort",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-azureaks-vcpu-guaranteed
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-azureaks-vcpu-guaranteed-7
  name: kubernetes-azureaks-vcpu-guaranteed-7
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-azureaks-vcpu-guaranteed
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-azureaks-vcpu-guaranteed-7
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-azureaks-vcpu-guaranteed
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        sales_order!="NONE",
                        sales_order!="TERMINATED",
                        cloud_provider="azure",
                        distribution="aks",
                        vshn_service_level="guaranteed_availability",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_49_440b0fa7
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-zero-0
  name: kubernetes-hyperscaler-cluster-zero-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-zero-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-zero
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                            distribution!="rke2",
                            distribution!="rancher",
                            sales_order!="TERMINATED",
                            sales_order!="NONE",
                            vshn_service_level="zero",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-standard-1
  name: kubernetes-hyperscaler-cluster-standard-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-standard-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-standard
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                            distribution!="rke2",
                            distribution!="rancher",
                            sales_order!="TERMINATED",
                            sales_order!="NONE",
                            vshn_service_level="standard",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-professional-2
  name: kubernetes-hyperscaler-cluster-professional-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-professional-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-professional
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                            distribution!="rke2",
                            distribution!="rancher",
                            sales_order!="TERMINATED",
                            sales_order!="NONE",
                            vshn_service_level="professional",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-premium-3
  name: kubernetes-hyperscaler-cluster-premium-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-premium-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-premium
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                            distribution!="rke2",
                            distribution!="rancher",
                            sales_order!="TERMINATED",
                            sales_order!="NONE",
                            vshn_service_level="premium",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-zero-0
  name: kubernetes-hyperscaler-cluster-zero-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-zero-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-zero
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        distribution!="rke2",
                        distribution!="rancher",
                        sales_order!="TERMINATED",
                        sales_order!="NONE",
                        vshn_service_level="zero",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-standard-1
  name: kubernetes-hyperscaler-cluster-standard-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-standard-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-standard
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        distribution!="rke2",
                        distribution!="rancher",
                        sales_order!="TERMINATED",
                        sales_order!="NONE",
                        vshn_service_level="standard",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-professional-2
  name: kubernetes-hyperscaler-cluster-professional-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-professional-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-professional
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        distribution!="rke2",
                        distribution!="rancher",
                        sales_order!="TERMINATED",
                        sales_order!="NONE",
                        vshn_service_level="professional",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-hyperscaler-cluster-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-hyperscaler-cluster-premium-3
  name: kubernetes-hyperscaler-cluster-premium-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-hyperscaler-cluster-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-hyperscaler-cluster-premium-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-hyperscaler-cluster-premium
                - name: AR_QUERY
                  value: |
                    max_over_time(sum by(cluster_id) (node_cpu_info)[59m:1m])
                    # Pull in the APPUiO managed info labels
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                        distribution!="rke2",
                        distribution!="rancher",
                        sales_order!="TERMINATED",
                        sales_order!="NONE",
                        vshn_service_level="premium",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-cloudscale-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-cloudscale-zero-0
  name: openshift-clusters-cloudscale-zero-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-cloudscale-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-cloudscale-zero-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-cloudscale-zero
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="cloudscale",
                          vshn_service_level="zero"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-cloudscale-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-cloudscale-standard-1
  name: openshift-clusters-cloudscale-standard-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-cloudscale-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-cloudscale-standard-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-cloudscale-standard
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="cloudscale",
                          vshn_service_level="standard"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-cloudscale-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-cloudscale-professional-2
  name: openshift-clusters-cloudscale-professional-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-cloudscale-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-cloudscale-professional-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-cloudscale-professional
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="cloudscale",
                          vshn_service_level="professional"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-cloudscale-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-cloudscale-premium-3
  name: openshift-clusters-cloudscale-premium-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-cloudscale-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-cloudscale-premium-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-cloudscale-premium
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="cloudscale",
                          vshn_service_level="premium"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-exoscale-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-exoscale-zero-4
  name: openshift-clusters-exoscale-zero-4
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-exoscale-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-exoscale-zero-4
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-exoscale-zero
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="exoscale",
                          vshn_service_level="zero"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-exoscale-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-exoscale-standard-5
  name: openshift-clusters-exoscale-standard-5
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-exoscale-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-exoscale-standard-5
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-exoscale-standard
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="exoscale",
                          vshn_service_level="standard"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-exoscale-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-exoscale-professional-6
  name: openshift-clusters-exoscale-professional-6
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-exoscale-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-exoscale-professional-6
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-exoscale-professional
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="exoscale",
                          vshn_service_level="professional"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-exoscale-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-exoscale-premium-7
  name: openshift-clusters-exoscale-premium-7
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-exoscale-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-exoscale-premium-7
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-exoscale-premium
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="exoscale",
                          vshn_service_level="premium"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-zero-8
  name: openshift-clusters-vsphere-zero-8
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-zero-8
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-zero
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="vsphere",
                          vshn_service_level="zero"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-standard-9
  name: openshift-clusters-vsphere-standard-9
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-standard-9
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-standard
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="vsphere",
                          vshn_service_level="standard"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-professional-10
  name: openshift-clusters-vsphere-professional-10
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-professional-10
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-professional
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="vsphere",
                          vshn_service_level="professional"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-premium-11
  name: openshift-clusters-vsphere-premium-11
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-premium-11
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-premium
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="vsphere",
                          vshn_service_level="premium"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-openstack-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-openstack-zero-12
  name: openshift-clusters-openstack-zero-12
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-openstack-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-openstack-zero-12
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-openstack-zero
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="openstack",
                          vshn_service_level="zero"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-openstack-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-openstack-standard-13
  name: openshift-clusters-openstack-standard-13
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-openstack-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-openstack-standard-13
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-openstack-standard
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="openstack",
                          vshn_service_level="standard"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-openstack-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-openstack-professional-14
  name: openshift-clusters-openstack-professional-14
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-openstack-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-openstack-professional-14
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-openstack-professional
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="openstack",
                          vshn_service_level="professional"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-openstack-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-openstack-premium-15
  name: openshift-clusters-openstack-premium-15
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-openstack-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-openstack-premium-15
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-openstack-premium
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="openstack",
                          vshn_service_level="premium"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-standard-16
  name: openshift-clusters-vsphere-standard-16
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-standard-16
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-standard
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="xelon",
                          vshn_service_level="standard"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: openshift-clusters-vsphere-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: openshift-clusters-vsphere-professional-17
  name: openshift-clusters-vsphere-professional-17
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: openshift-clusters-vsphere-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: openshift-clusters-vsphere-professional-17
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: openshift-clusters-vsphere-professional
                - name: AR_QUERY
                  value: |
                    # Calculates number of clusters per cluster. Always returns 1.
                    # Max values over one hour.
                    max_over_time(
                      # Use aggregation to drop labels of no interest.
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          cloud_provider="none",
                          vshn_service_level="professional"},
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed OpenShift
                    - Cluster: %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-openshift-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-cluster-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-cluster-zero-0
  name: kubernetes-iaas-cluster-zero-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-cluster-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-cluster-zero-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-cluster-zero
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          sales_order!="TERMINATED",
                          sales_order!="NONE",
                          distribution=~"rancher|rke2",
                          vshn_service_level="zero",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-cluster-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-cluster-standard-1
  name: kubernetes-iaas-cluster-standard-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-cluster-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-cluster-standard-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-cluster-standard
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          sales_order!="TERMINATED",
                          sales_order!="NONE",
                          distribution=~"rancher|rke2",
                          vshn_service_level="standard",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-cluster-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-cluster-professional-2
  name: kubernetes-iaas-cluster-professional-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-cluster-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-cluster-professional-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-cluster-professional
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          sales_order!="TERMINATED",
                          sales_order!="NONE",
                          distribution=~"rancher|rke2",
                          vshn_service_level="professional",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-cluster-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-cluster-premium-3
  name: kubernetes-iaas-cluster-premium-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-cluster-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-cluster-premium-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-cluster-premium
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      group by(cluster_id, sales_order) (
                        appuio_managed_info{
                          sales_order!="TERMINATED",
                          sales_order!="NONE",
                          distribution=~"rancher|rke2",
                          vshn_service_level="premium",
                        }
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_53_4a7e8f3e
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-node-zero
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-node-zero-0
  name: kubernetes-iaas-node-zero-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-node-zero
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-node-zero-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-node-zero
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      count by(cluster_id) (
                        kube_node_labels
                        * on(node) group_left() (max by (node) (kube_node_role{role="worker"}))
                      )[59m:1m]
                    )
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                      sales_order!="TERMINATED",
                      sales_order!="NONE",
                      distribution=~"rke2|rancher",
                      vshn_service_level="zero",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-node-standard
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-node-standard-1
  name: kubernetes-iaas-node-standard-1
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-node-standard
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-node-standard-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-node-standard
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      count by(cluster_id) (
                        kube_node_labels
                        * on(node) group_left() (max by (node) (kube_node_role{role="worker"}))
                      )[59m:1m]
                    )
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                      sales_order!="TERMINATED",
                      sales_order!="NONE",
                      distribution=~"rke2|rancher",
                      vshn_service_level="standard",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-node-professional
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-node-professional-2
  name: kubernetes-iaas-node-professional-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-node-professional
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-node-professional-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-node-professional
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      count by(cluster_id) (
                        kube_node_labels
                        * on(node) group_left() (max by (node) (kube_node_role{role="worker"}))
                      )[59m:1m]
                    )
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                      sales_order!="TERMINATED",
                      sales_order!="NONE",
                      distribution=~"rke2|rancher",
                      vshn_service_level="professional",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: kubernetes-iaas-node-premium
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: kubernetes-iaas-node-premium-3
  name: kubernetes-iaas-node-premium-3
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: kubernetes-iaas-node-premium
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: kubernetes-iaas-node-premium-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: kubernetes-iaas-node-premium
                - name: AR_QUERY
                  value: |
                    max_over_time(
                      count by(cluster_id) (
                        kube_node_labels
                        * on(node) group_left() (max by (node) (kube_node_role{role="worker"}))
                      )[59m:1m]
                    )
                    * on(cluster_id) group_left(sales_order) appuio_managed_info{
                      sales_order!="TERMINATED",
                      sales_order!="NONE",
                      distribution=~"rke2|rancher",
                      vshn_service_level="premium",
                    }
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_ITEM_GROUP_DESCRIPTION_JSONNET
                  value: 'local labels = std.extVar("labels"); "APPUiO Managed - Cluster:
                    %(cluster_id)s" % labels'
                - name: AR_UNIT_ID
                  value: uom_uom_191_55730e52
                - name: AR_ORG_ID
                  value: appuio-managed-kubernetes-services-billing
              image: ghcr.io/appuio/appuio-reporting:v0.2.0
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 15 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
