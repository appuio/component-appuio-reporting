apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: bopenshift-worker-vcpu-cloudscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: bopenshift-worker-vcpu-cloudscale-besteffort-0
  name: bopenshift-worker-vcpu-cloudscale-besteffort-0
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: bopenshift-worker-vcpu-cloudscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: bopenshift-worker-vcpu-cloudscale-besteffort-0
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: bopenshift-worker-vcpu-cloudscale-besteffort
                - name: AR_QUERY
                  value: |
                    # Calculates vCPUs for app nodes of a cluster
                    # Max values over one hour.
                    max_over_time(
                      sum by(cluster_id, vshn_service_level, tenant_id, role, cloud_provider, sales_order_id) (
                        node_cpu_info * on (tenant_id, cluster_id, instance) group_left(role)
                          label_join(
                            kube_node_role{role=~"app|storage"},
                            "instance",
                            "",
                            "node"
                          ) * on(cluster_id) group_left(tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                            max by(cluster_id, tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                              (appuio_managed_info{cloud_provider="cloudscale", vshn_service_level="best-effort"})
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_UNIT_ID
                  value: '300'
              image: ghcr.io/appuio/appuio-reporting:v0.2.2
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 10 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: bopenshift-worker-vcpu-cloudscale-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: bopenshift-worker-vcpu-cloudscale-gu-875823df3c4163e
  name: bopenshift-worker-vcpu-cloudscale-gu-875823df3c4163e
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: bopenshift-worker-vcpu-cloudscale-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: bopenshift-worker-vcpu-cloudscale-guaranteedavailability-1
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: bopenshift-worker-vcpu-cloudscale-guaranteedavailability
                - name: AR_QUERY
                  value: |
                    # Calculates vCPUs for app nodes of a cluster
                    # Max values over one hour.
                    max_over_time(
                      sum by(cluster_id, vshn_service_level, tenant_id, role, cloud_provider, sales_order_id) (
                        node_cpu_info * on (tenant_id, cluster_id, instance) group_left(role)
                          label_join(
                            kube_node_role{role=~"app|storage"},
                            "instance",
                            "",
                            "node"
                          ) * on(cluster_id) group_left(tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                            max by(cluster_id, tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                              (appuio_managed_info{cloud_provider="cloudscale", vshn_service_level="guaranteed-availability"})
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_UNIT_ID
                  value: '300'
              image: ghcr.io/appuio/appuio-reporting:v0.2.2
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 11 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: bopenshift-worker-vcpu-exoscale-besteffort
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: bopenshift-worker-vcpu-exoscale-besteffort-2
  name: bopenshift-worker-vcpu-exoscale-besteffort-2
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: bopenshift-worker-vcpu-exoscale-besteffort
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: bopenshift-worker-vcpu-exoscale-besteffort-2
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: bopenshift-worker-vcpu-exoscale-besteffort
                - name: AR_QUERY
                  value: |
                    # Calculates vCPUs for app nodes of a cluster
                    # Max values over one hour.
                    max_over_time(
                      sum by(cluster_id, vshn_service_level, tenant_id, role, cloud_provider, sales_order_id) (
                        node_cpu_info * on (tenant_id, cluster_id, instance) group_left(role)
                          label_join(
                            kube_node_role{role=~"app|storage"},
                            "instance",
                            "",
                            "node"
                          ) * on(cluster_id) group_left(tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                            max by(cluster_id, tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                              (appuio_managed_info{cloud_provider="exoscale", vshn_service_level="best-effort"})
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_UNIT_ID
                  value: '300'
              image: ghcr.io/appuio/appuio-reporting:v0.2.2
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 12 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
---
apiVersion: batch/v1
kind: CronJob
metadata:
  annotations:
    product-id: bopenshift-worker-vcpu-exoscale-guaranteedavailability
  labels:
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: appuio-reporting
    app.kubernetes.io/part-of: syn
    name: bopenshift-worker-vcpu-exoscale-guar-f9d9956cc8b36e4
  name: bopenshift-worker-vcpu-exoscale-guar-f9d9956cc8b36e4
  namespace: appuio-reporting
spec:
  failedJobsHistoryLimit: 768
  jobTemplate:
    metadata:
      annotations:
        product-id: bopenshift-worker-vcpu-exoscale-guaranteedavailability
      labels:
        app.kubernetes.io/managed-by: commodore
        app.kubernetes.io/name: appuio-reporting
        app.kubernetes.io/part-of: syn
        cron-job-name: bopenshift-worker-vcpu-exoscale-guaranteedavailability-3
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/managed-by: commodore
            app.kubernetes.io/name: appuio-reporting
            app.kubernetes.io/part-of: syn
        spec:
          containers:
            - args:
                - appuio-reporting report --timerange 1h --begin=$(date -d "now -3
                  hours" -u +"%Y-%m-%dT%H:00:00Z") --repeat-until=$(date -u -Iseconds)
              command:
                - sh
                - -c
              env:
                - name: AR_ODOO_OAUTH_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      key: token_endpoint
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      key: client_id
                      name: odoo-credentials
                - name: AR_ODOO_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: client_secret
                      name: odoo-credentials
                - name: AR_ODOO_URL
                - name: AR_PROM_URL
                  valueFrom:
                    secretKeyRef:
                      key: url
                      name: prom-url
                - name: AR_PRODUCT_ID
                  value: bopenshift-worker-vcpu-exoscale-guaranteedavailability
                - name: AR_QUERY
                  value: |
                    # Calculates vCPUs for app nodes of a cluster
                    # Max values over one hour.
                    max_over_time(
                      sum by(cluster_id, vshn_service_level, tenant_id, role, cloud_provider, sales_order_id) (
                        node_cpu_info * on (tenant_id, cluster_id, instance) group_left(role)
                          label_join(
                            kube_node_role{role=~"app|storage"},
                            "instance",
                            "",
                            "node"
                          ) * on(cluster_id) group_left(tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                            max by(cluster_id, tenant_id, vshn_service_level, cloud_provider, sales_order_id)
                              (appuio_managed_info{cloud_provider="exoscale", vshn_service_level="guaranteed-availability"})
                      )[59m:1m]
                    )
                - name: AR_INSTANCE_JSONNET
                  value: local labels = std.extVar("labels"); "%(cluster_id)s" % labels
                - name: AR_UNIT_ID
                  value: '300'
              image: ghcr.io/appuio/appuio-reporting:v0.2.2
              name: backfill
              resources: {}
          initContainers: []
          restartPolicy: OnFailure
  schedule: 13 * * * *
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
  suspend: false
